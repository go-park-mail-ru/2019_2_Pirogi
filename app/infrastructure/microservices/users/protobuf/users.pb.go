// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Email struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type User struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=Password,proto3" json:"Password,omitempty"`
	Username             string   `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	Mark                 float32  `protobuf:"fixed32,5,opt,name=Mark,proto3" json:"Mark,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Image                string   `protobuf:"bytes,7,opt,name=Image,proto3" json:"Image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetMark() float32 {
	if m != nil {
		return m.Mark
	}
	return 0
}

func (m *User) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *User) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type UserNew struct {
	Email                string   `protobuf:"bytes,1,opt,name=Email,proto3" json:"Email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserNew) Reset()         { *m = UserNew{} }
func (m *UserNew) String() string { return proto.CompactTextString(m) }
func (*UserNew) ProtoMessage()    {}
func (*UserNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{2}
}

func (m *UserNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserNew.Unmarshal(m, b)
}
func (m *UserNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserNew.Marshal(b, m, deterministic)
}
func (m *UserNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserNew.Merge(m, src)
}
func (m *UserNew) XXX_Size() int {
	return xxx_messageInfo_UserNew.Size(m)
}
func (m *UserNew) XXX_DiscardUnknown() {
	xxx_messageInfo_UserNew.DiscardUnknown(m)
}

var xxx_messageInfo_UserNew proto.InternalMessageInfo

func (m *UserNew) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserNew) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ID struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{3}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type CookieValue struct {
	CookieValue          string   `protobuf:"bytes,1,opt,name=cookieValue,proto3" json:"cookieValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CookieValue) Reset()         { *m = CookieValue{} }
func (m *CookieValue) String() string { return proto.CompactTextString(m) }
func (*CookieValue) ProtoMessage()    {}
func (*CookieValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{4}
}

func (m *CookieValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CookieValue.Unmarshal(m, b)
}
func (m *CookieValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CookieValue.Marshal(b, m, deterministic)
}
func (m *CookieValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CookieValue.Merge(m, src)
}
func (m *CookieValue) XXX_Size() int {
	return xxx_messageInfo_CookieValue.Size(m)
}
func (m *CookieValue) XXX_DiscardUnknown() {
	xxx_messageInfo_CookieValue.DiscardUnknown(m)
}

var xxx_messageInfo_CookieValue proto.InternalMessageInfo

func (m *CookieValue) GetCookieValue() string {
	if m != nil {
		return m.CookieValue
	}
	return ""
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{5}
}

func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (m *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(m, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Email)(nil), "v1.Email")
	proto.RegisterType((*User)(nil), "v1.User")
	proto.RegisterType((*UserNew)(nil), "v1.UserNew")
	proto.RegisterType((*ID)(nil), "v1.ID")
	proto.RegisterType((*CookieValue)(nil), "v1.CookieValue")
	proto.RegisterType((*Nothing)(nil), "v1.Nothing")
}

func init() { proto.RegisterFile("users.proto", fileDescriptor_030765f334c86cea) }

var fileDescriptor_030765f334c86cea = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xcd, 0x4e, 0xf2, 0x40,
	0x14, 0x4d, 0x07, 0x68, 0xe1, 0x36, 0xf9, 0x3e, 0x33, 0x61, 0x31, 0xc1, 0x18, 0x71, 0x56, 0x6c,
	0xc4, 0xa0, 0x4b, 0x77, 0x52, 0x63, 0xba, 0x90, 0x18, 0x0c, 0xee, 0x47, 0xb8, 0xc1, 0x09, 0x3f,
	0x43, 0x66, 0x4a, 0x1b, 0xdf, 0xca, 0x57, 0xf0, 0xcd, 0xcc, 0x4c, 0x0b, 0x4c, 0x8d, 0xbb, 0x7b,
	0x7e, 0xe6, 0xe4, 0x9c, 0xa6, 0x10, 0xef, 0x0d, 0x6a, 0x33, 0xdc, 0x69, 0x95, 0x29, 0x4a, 0xf2,
	0x11, 0xbf, 0x80, 0xd6, 0xe3, 0x46, 0xc8, 0x35, 0xed, 0x56, 0x07, 0x0b, 0xfa, 0xc1, 0xa0, 0x33,
	0x2d, 0x01, 0xff, 0x0a, 0xa0, 0x39, 0x33, 0xa8, 0xe9, 0x3f, 0x20, 0x69, 0xe2, 0xb4, 0xc6, 0x94,
	0xa4, 0xc9, 0xc9, 0x4e, 0x3c, 0x3b, 0xed, 0x41, 0xfb, 0x45, 0x18, 0x53, 0x28, 0xbd, 0x60, 0x0d,
	0x27, 0x1c, 0xb1, 0xd5, 0x6c, 0xd2, 0x56, 0x6c, 0x90, 0x35, 0x4b, 0xed, 0x80, 0x29, 0x85, 0xe6,
	0xb3, 0xd0, 0x2b, 0xd6, 0xea, 0x07, 0x03, 0x32, 0x75, 0x37, 0xed, 0x43, 0x9c, 0xa0, 0x99, 0x6b,
	0xb9, 0xcb, 0xa4, 0xda, 0xb2, 0xd0, 0x3d, 0xf1, 0x29, 0xdb, 0x21, 0xdd, 0x88, 0x25, 0xb2, 0xa8,
	0xec, 0xe0, 0x00, 0xbf, 0x87, 0xc8, 0xe6, 0x4e, 0xb0, 0xf8, 0x7b, 0x53, 0xad, 0x24, 0xa9, 0x97,
	0xe4, 0x5d, 0x3b, 0xf3, 0xf7, 0x58, 0x7e, 0x03, 0xf1, 0x58, 0xa9, 0x95, 0xc4, 0x37, 0xb1, 0xde,
	0xa3, 0x6d, 0x36, 0x3f, 0xc1, 0x2a, 0xdc, 0xa7, 0x78, 0x07, 0xa2, 0x89, 0xca, 0x3e, 0xe4, 0x76,
	0x79, 0xfb, 0x1d, 0x40, 0x6c, 0xfb, 0xbc, 0xa2, 0xce, 0xe5, 0x1c, 0xe9, 0x35, 0x9c, 0x3d, 0x61,
	0xf6, 0xf0, 0xe9, 0x07, 0xfe, 0x1f, 0xe6, 0xa3, 0xa1, 0x47, 0xf4, 0xda, 0x96, 0x70, 0xdf, 0xfd,
	0x1c, 0x22, 0x67, 0x4f, 0x13, 0x1a, 0x5a, 0x32, 0x4d, 0x3c, 0xf1, 0x0a, 0xc0, 0x89, 0xe5, 0xae,
	0x8e, 0xe5, 0xdd, 0xe9, 0x59, 0x38, 0x84, 0x63, 0x8d, 0x22, 0x43, 0x1a, 0x1f, 0xb8, 0x09, 0x16,
	0x3d, 0x07, 0xaa, 0x8a, 0xf4, 0x12, 0xc2, 0xd9, 0x6e, 0x61, 0x3d, 0xc7, 0x77, 0x35, 0xc3, 0x7b,
	0xe8, 0xfe, 0x97, 0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x47, 0x59, 0x34, 0x3e, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetByCookieValue(ctx context.Context, in *CookieValue, opts ...grpc.CallOption) (*User, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error)
	GetByEmail(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error)
	Create(ctx context.Context, in *UserNew, opts ...grpc.CallOption) (*Nothing, error)
	Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*Nothing, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetByCookieValue(ctx context.Context, in *CookieValue, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/v1.UserService/GetByCookieValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/v1.UserService/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByEmail(ctx context.Context, in *Email, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/v1.UserService/GetByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *UserNew, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/v1.UserService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/v1.UserService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetByCookieValue(context.Context, *CookieValue) (*User, error)
	GetByID(context.Context, *ID) (*User, error)
	GetByEmail(context.Context, *Email) (*User, error)
	Create(context.Context, *UserNew) (*Nothing, error)
	Update(context.Context, *User) (*Nothing, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetByCookieValue(ctx context.Context, req *CookieValue) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByCookieValue not implemented")
}
func (*UnimplementedUserServiceServer) GetByID(ctx context.Context, req *ID) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedUserServiceServer) GetByEmail(ctx context.Context, req *Email) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByEmail not implemented")
}
func (*UnimplementedUserServiceServer) Create(ctx context.Context, req *UserNew) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserServiceServer) Update(ctx context.Context, req *User) (*Nothing, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetByCookieValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CookieValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByCookieValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserService/GetByCookieValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByCookieValue(ctx, req.(*CookieValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserService/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserService/GetByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetByEmail(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserNew)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*UserNew))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UserService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Update(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByCookieValue",
			Handler:    _UserService_GetByCookieValue_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _UserService_GetByID_Handler,
		},
		{
			MethodName: "GetByEmail",
			Handler:    _UserService_GetByEmail_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserService_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}
